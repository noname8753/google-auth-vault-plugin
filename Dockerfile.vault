FROM golang:1.13.12-stretch AS build

WORKDIR /go/src/github.com/hashicorp/vault

RUN \
  curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
  echo 'deb http://deb.nodesource.com/node_10.x stretch main' > /etc/apt/sources.list.d/nodesource.list && \
  apt-get update && apt-get install -y \
  nodejs \
  npm \
  bzip2 \
  zip \
  xz-utils && \
  npm install yarn -g

RUN apt-get update && apt-get install -y patch

ENV VAULT_TAG v1.4.3

RUN git clone https://github.com/hashicorp/vault.git . && \
    git checkout "${VAULT_TAG}" && \
    make bootstrap

# use go mod
ENV GO111MODULE on

# build ui to have efficient docker layer caching
RUN make ember-dist static-assets

COPY patches /tmp/patches

ARG integratePlugin
#Integrate Google Auth Plugin
#RUN if [ "$integratePlugin" = "yes" ]; then /usr/bin/patch /go/src/github.com/hashicorp/vault/helper/builtinplugins/registry.go /tmp/patches/registry.patch; /usr/bin/patch /go/src/github.com/hashicorp/vault/go.mod /tmp/patches/go.mod.patch; /usr/bin/patch /go/src/github.com/hashicorp/vault/go.sum /tmp/patches/go.sum.patch; grep noname /go/src/github.com/hashicorp/vault/helper/builtinplugins/registry.go; else echo "Not integrating patch"; fi

#bug in previous inclusion
#RUN sed -i "/go.etcd.io\/etcd/d" /go/src/github.com/hashicorp/vault/go.mod && go get go.etcd.io/etcd@54ba9589114f

# build vault
RUN make bin XC_OSARCH=linux/amd64

RUN git config --global user.email "noname8753@github.com" && git config --global user.name "noname8753"

ARG disableOtherAuths
# patch UI
RUN git am /tmp/patches/0003-Implement-google-oauth2-in-the-UI.patch 

RUN if [ "$disableOtherAuths" = "yes" ]; then git am /tmp/patches/0004-Disable-UI-auth-backends-apart-from-token-and-google.patch; else echo "Not patching to Disable UI auths"; fi


# build UI
RUN \
  make ember-dist static-assets

RUN git checkout go.mod helper/builtinplugins/registry.go



#1 errors occurred:
#--> linux/amd64 error: exit status 2
#Stderr: # go.etcd.io/etcd/clientv3/balancer/resolver/endpoint
#/go/pkg/mod/go.etcd.io/etcd@v0.5.0-alpha.5.0.20191023171146-3cf2f69b5738/clientv3/balancer/resolver/endpoint/endpoint.go:114:78: undefined: resolver.BuildOption
#/go/pkg/mod/go.etcd.io/etcd@v0.5.0-alpha.5.0.20191023171146-3cf2f69b5738/clientv3/balancer/resolver/endpoint/endpoint.go:182:31: undefined: resolver.ResolveNowOption
# go.etcd.io/etcd/clientv3/balancer/picker
#/go/pkg/mod/go.etcd.io/etcd@v0.5.0-alpha.5.0.20191023171146-3cf2f69b5738/clientv3/balancer/picker/err.go:37:44: undefined: balancer.PickOptions
#/go/pkg/mod/go.etcd.io/etcd@v0.5.0-alpha.5.0.20191023171146-3cf2f69b5738/clientv3/balancer/picker/roundrobin_balanced.go:55:54: undefined: balancer.PickOptions
#Forcing newer commit getting around bug listed above: go.etcd.io/etcd@54ba9589114f
# rebuild vault
RUN \
  sed -i "s/VersionPrerelease =.*/VersionPrerelease = \"auth-google\"/g" sdk/version/version_base.go && \
  sed -i "/go.etcd.io\/etcd/d" /go/src/github.com/hashicorp/vault/go.mod && go get go.etcd.io/etcd@54ba9589114f && \
  if [ "$integratePlugin" = "yes" ]; then /usr/bin/patch /go/src/github.com/hashicorp/vault/helper/builtinplugins/registry.go /tmp/patches/registry.patch; fi && \
  make bin XC_OSARCH=linux/amd64
